// Generated by gencpp from file state_machine/State.msg
// DO NOT EDIT!


#ifndef STATE_MACHINE_MESSAGE_STATE_H
#define STATE_MACHINE_MESSAGE_STATE_H

#include <ros/service_traits.h>


#include <state_machine/StateRequest.h>
#include <state_machine/StateResponse.h>


namespace state_machine
{

struct State
{

typedef StateRequest Request;
typedef StateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct State
} // namespace state_machine


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::state_machine::State > {
  static const char* value()
  {
    return "800f34bc468def1d86e2d42bea5648c0";
  }

  static const char* value(const ::state_machine::State&) { return value(); }
};

template<>
struct DataType< ::state_machine::State > {
  static const char* value()
  {
    return "state_machine/State";
  }

  static const char* value(const ::state_machine::State&) { return value(); }
};


// service_traits::MD5Sum< ::state_machine::StateRequest> should match
// service_traits::MD5Sum< ::state_machine::State >
template<>
struct MD5Sum< ::state_machine::StateRequest>
{
  static const char* value()
  {
    return MD5Sum< ::state_machine::State >::value();
  }
  static const char* value(const ::state_machine::StateRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::state_machine::StateRequest> should match
// service_traits::DataType< ::state_machine::State >
template<>
struct DataType< ::state_machine::StateRequest>
{
  static const char* value()
  {
    return DataType< ::state_machine::State >::value();
  }
  static const char* value(const ::state_machine::StateRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::state_machine::StateResponse> should match
// service_traits::MD5Sum< ::state_machine::State >
template<>
struct MD5Sum< ::state_machine::StateResponse>
{
  static const char* value()
  {
    return MD5Sum< ::state_machine::State >::value();
  }
  static const char* value(const ::state_machine::StateResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::state_machine::StateResponse> should match
// service_traits::DataType< ::state_machine::State >
template<>
struct DataType< ::state_machine::StateResponse>
{
  static const char* value()
  {
    return DataType< ::state_machine::State >::value();
  }
  static const char* value(const ::state_machine::StateResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // STATE_MACHINE_MESSAGE_STATE_H
